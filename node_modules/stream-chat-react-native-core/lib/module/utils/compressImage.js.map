{"version":3,"names":["_native","require","compressedImageURI","_ref","_asyncToGenerator2","_regenerator","mark","_callee","image","compressImageQuality","uri","compressedUri","wrap","_callee$","_context","prev","next","source","height","width","compressImage","sent","abrupt","stop","_x","_x2","apply","arguments","exports"],"sources":["compressImage.ts"],"sourcesContent":["import { compressImage } from '../native';\nimport type { Asset } from '../types/types';\n\n/**\n * Function to compress and Image and return the compressed Image URI\n * @param image\n * @param compressImageQuality\n * @returns string\n */\nexport const compressedImageURI = async (image: Partial<Asset>, compressImageQuality?: number) => {\n  const uri = image.uri || '';\n  /**\n   * We skip compression if:\n   * - the file is from the camera as that should already be compressed\n   * - the file has no height/width value to maintain for compression\n   * - the compressImageQuality number is not present or is 1 (meaning no compression)\n   */\n  const compressedUri = await (image.source === 'camera' ||\n  !image.height ||\n  !image.width ||\n  typeof compressImageQuality !== 'number' ||\n  compressImageQuality === 1\n    ? uri\n    : compressImage({\n        compressImageQuality,\n        height: image.height,\n        uri,\n        width: image.width,\n      }));\n\n  return compressedUri;\n};\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AASO,IAAMC,kBAAkB;EAAA,IAAAC,IAAA,OAAAC,kBAAA,aAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAOC,KAAqB,EAAEC,oBAA6B;IAAA,IAAAC,GAAA,EAAAC,aAAA;IAAA,OAAAN,YAAA,YAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACrFN,GAAG,GAAGF,KAAK,CAACE,GAAG,IAAI,EAAE;UAAAI,QAAA,CAAAE,IAAA;UAAA,OAOER,KAAK,CAACS,MAAM,KAAK,QAAQ,IACtD,CAACT,KAAK,CAACU,MAAM,IACb,CAACV,KAAK,CAACW,KAAK,IACZ,OAAOV,oBAAoB,KAAK,QAAQ,IACxCA,oBAAoB,KAAK,CAAC,GACtBC,GAAG,GACH,IAAAU,qBAAa,EAAC;YACZX,oBAAoB,EAApBA,oBAAoB;YACpBS,MAAM,EAAEV,KAAK,CAACU,MAAM;YACpBR,GAAG,EAAHA,GAAG;YACHS,KAAK,EAAEX,KAAK,CAACW;UACf,CAAC,CAAC;QAAA;UAXAR,aAAa,GAAAG,QAAA,CAAAO,IAAA;UAAA,OAAAP,QAAA,CAAAQ,MAAA,WAaZX,aAAa;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAS,IAAA;MAAA;IAAA,GAAAhB,OAAA;EAAA,CACrB;EAAA,gBAtBYL,kBAAkBA,CAAAsB,EAAA,EAAAC,GAAA;IAAA,OAAAtB,IAAA,CAAAuB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAsB9B;AAACC,OAAA,CAAA1B,kBAAA,GAAAA,kBAAA"}