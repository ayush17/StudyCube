{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeSvg","_interopRequireWildcard","_MessageContext","_MessagesContext","_ThemeContext","_Unknown","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","styles","StyleSheet","create","container","left","position","top","reactionBubble","alignItems","flexDirection","justifyContent","reactionBubbleBackground","Icon","_ref","_supportedReactions$f","pathFill","size","style","supportedReactions","type","ReactionIcon","find","reaction","Unknown","createElement","View","__self","__source","fileName","lineNumber","columnNumber","height","width","ReactionListWithContext","props","alignment","propFill","fill","message","messageContentWidth","onLongPress","onPress","onPressIn","preventPress","propRadius","radius","reactions","propReactionSize","reactionSize","showMessageOverlay","propStroke","stroke","propStrokeSize","strokeSize","targetedMessage","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","accent_blue","grey","grey_gainsboro","grey_whisper","targetedMessageBackground","white","white_snow","_useTheme$theme$messa","messageSimple","_useTheme$theme$messa2","avatarWrapper","leftAlign","spacer","_useTheme$theme$messa3","reactionList","iconFillColor","middleIcon","themeRadius","themeReactionSize","themeStrokeSize","screenPadding","useWindowDimensions","supportedReactionTypes","map","supportedReaction","hasSupportedReactions","some","includes","alignmentLeft","highlighted","pinned","id","x1","Number","marginRight","x2","y1","y2","insideLeftBound","length","insideRightBound","pointerEvents","testID","absoluteFill","Circle","cx","cy","r","backgroundColor","borderColor","borderRadius","borderWidth","TouchableOpacity","disabled","event","emitter","defaultHandler","own","areEqual","prevProps","nextProps","prevMessage","prevMessageContentWidth","prevTargetedMessage","nextMessage","nextMessageContentWidth","nextTargetedMessage","messageContentWidthEqual","messagePinnedEqual","targetedMessageEqual","latestReactionsEqual","Array","isArray","latest_reactions","every","_ref2","index","_nextMessage$latest_r","MemoizedReactionList","React","memo","ReactionList","_useMessageContext","useMessageContext","_useMessagesContext","useMessagesContext","_extends2","exports"],"sources":["ReactionList.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\n\nimport Svg, { Circle } from 'react-native-svg';\n\nimport {\n  MessageContextValue,\n  Reactions,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\n\nimport { Unknown } from '../../../icons/Unknown';\n\nimport type { IconProps } from '../../../icons/utils/base';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport type { ReactionData } from '../../../utils/utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    left: 0,\n    position: 'absolute',\n    top: 0,\n  },\n  reactionBubble: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    position: 'absolute',\n  },\n  reactionBubbleBackground: {\n    position: 'absolute',\n  },\n});\n\nexport type MessageReactions = {\n  reactions: Reactions;\n  supportedReactions?: ReactionData[];\n};\n\nconst Icon: React.FC<\n  Pick<IconProps, 'pathFill' | 'style'> & {\n    size: number;\n    supportedReactions: ReactionData[];\n    type: string;\n  }\n> = ({ pathFill, size, style, supportedReactions, type }) => {\n  const ReactionIcon =\n    supportedReactions.find((reaction) => reaction.type === type)?.Icon || Unknown;\n\n  return (\n    <View>\n      <ReactionIcon height={size} pathFill={pathFill} style={style} width={size} />\n    </View>\n  );\n};\n\nexport type ReactionListPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageContextValue<StreamChatGenerics>,\n  | 'alignment'\n  | 'message'\n  | 'onLongPress'\n  | 'onPress'\n  | 'onPressIn'\n  | 'preventPress'\n  | 'reactions'\n  | 'showMessageOverlay'\n> &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'targetedMessage'> & {\n    messageContentWidth: number;\n    supportedReactions: ReactionData[];\n    fill?: string;\n    radius?: number; // not recommended to change this\n    reactionSize?: number;\n    stroke?: string;\n    strokeSize?: number; // not recommended to change this\n  };\n\nconst ReactionListWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ReactionListPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    fill: propFill,\n    message,\n    messageContentWidth,\n    onLongPress,\n    onPress,\n    onPressIn,\n    preventPress,\n    radius: propRadius,\n    reactions,\n    reactionSize: propReactionSize,\n    showMessageOverlay,\n    stroke: propStroke,\n    strokeSize: propStrokeSize,\n    supportedReactions,\n    targetedMessage,\n  } = props;\n\n  const {\n    theme: {\n      colors: {\n        accent_blue,\n        grey,\n        grey_gainsboro,\n        grey_whisper,\n        targetedMessageBackground,\n        white,\n        white_snow,\n      },\n      messageSimple: {\n        avatarWrapper: { leftAlign, spacer },\n        reactionList: {\n          container,\n          iconFillColor,\n          middleIcon,\n          radius: themeRadius,\n          reactionBubble,\n          reactionBubbleBackground,\n          reactionSize: themeReactionSize,\n          strokeSize: themeStrokeSize,\n        },\n      },\n      screenPadding,\n    },\n  } = useTheme();\n\n  const width = useWindowDimensions().width;\n\n  const supportedReactionTypes = supportedReactions.map(\n    (supportedReaction) => supportedReaction.type,\n  );\n  const hasSupportedReactions = reactions.some((reaction) =>\n    supportedReactionTypes.includes(reaction.type),\n  );\n\n  if (!hasSupportedReactions || messageContentWidth === 0) {\n    return null;\n  }\n\n  const alignmentLeft = alignment === 'left';\n  const fill = propFill || (alignmentLeft ? grey_gainsboro : grey_whisper);\n  const radius = propRadius || themeRadius;\n  const reactionSize = propReactionSize || themeReactionSize;\n  const highlighted = message.pinned || targetedMessage === message.id;\n  const stroke = propStroke || (highlighted ? targetedMessageBackground : white_snow);\n  const strokeSize = propStrokeSize || themeStrokeSize;\n\n  const x1 = alignmentLeft\n    ? messageContentWidth +\n      (Number(leftAlign.marginRight) || 0) +\n      (Number(spacer.width) || 0) -\n      radius * 0.5\n    : width - screenPadding * 2 - messageContentWidth;\n  const x2 = x1 + radius * 2 * (alignmentLeft ? 1 : -1);\n  const y1 = reactionSize + radius * 2;\n  const y2 = reactionSize - radius;\n\n  const insideLeftBound = x2 - (reactionSize * reactions.length) / 2 > screenPadding;\n  const insideRightBound =\n    x2 + strokeSize + (reactionSize * reactions.length) / 2 < width - screenPadding * 2;\n  const left =\n    reactions.length === 1\n      ? x1 + (alignmentLeft ? -radius : radius - reactionSize)\n      : !insideLeftBound\n      ? screenPadding\n      : !insideRightBound\n      ? width - screenPadding * 2 - reactionSize * reactions.length - strokeSize\n      : x2 - (reactionSize * reactions.length) / 2 - strokeSize;\n\n  return (\n    <View\n      pointerEvents='box-none'\n      style={[\n        styles.container,\n        {\n          height: reactionSize + radius * 5,\n          width,\n        },\n        container,\n      ]}\n      testID='reaction-list'\n    >\n      {reactions.length ? (\n        <View pointerEvents='box-none' style={[StyleSheet.absoluteFill]}>\n          <Svg pointerEvents='none'>\n            <Circle cx={x1} cy={y1} fill={stroke} r={radius + strokeSize * 3} />\n            <Circle cx={x2} cy={y2} fill={stroke} r={radius * 2 + strokeSize * 3} />\n            <Circle cx={x1} cy={y1} fill={fill} r={radius + strokeSize} />\n            <Circle cx={x2} cy={y2} fill={fill} r={radius * 2 + strokeSize} />\n            <Circle cx={x1} cy={y1} fill={alignmentLeft ? fill : white} r={radius} />\n            <Circle cx={x2} cy={y2} fill={alignmentLeft ? fill : white} r={radius * 2} />\n          </Svg>\n          <View\n            style={[\n              styles.reactionBubbleBackground,\n              {\n                backgroundColor: alignmentLeft ? fill : white,\n                borderColor: fill,\n                borderRadius: reactionSize,\n                borderWidth: strokeSize,\n                height: reactionSize,\n                left,\n                width: reactionSize * reactions.length,\n              },\n              reactionBubbleBackground,\n            ]}\n          />\n          <View pointerEvents='none' style={[StyleSheet.absoluteFill]}>\n            <Svg>\n              <Circle cx={x2} cy={y2} fill={alignmentLeft ? fill : white} r={radius * 2} />\n            </Svg>\n          </View>\n          <TouchableOpacity\n            disabled={preventPress}\n            onLongPress={(event) => {\n              if (onLongPress) {\n                onLongPress({\n                  emitter: 'reactionList',\n                  event,\n                });\n              }\n            }}\n            onPress={(event) => {\n              if (onPress) {\n                onPress({\n                  defaultHandler: () => showMessageOverlay(true),\n                  emitter: 'reactionList',\n                  event,\n                });\n              }\n            }}\n            onPressIn={(event) => {\n              if (onPressIn) {\n                onPressIn({\n                  defaultHandler: () => showMessageOverlay(true),\n                  emitter: 'reactionList',\n                  event,\n                });\n              }\n            }}\n            style={[\n              styles.reactionBubble,\n              {\n                backgroundColor: alignmentLeft ? fill : white,\n                borderRadius: reactionSize - strokeSize * 2,\n                height: reactionSize - strokeSize * 2,\n                left: left + strokeSize,\n                top: strokeSize,\n                width: reactionSize * reactions.length - strokeSize * 2,\n              },\n              reactionBubble,\n            ]}\n          >\n            {reactions.map((reaction) => (\n              <Icon\n                key={reaction.type}\n                pathFill={reaction.own ? iconFillColor || accent_blue : grey}\n                size={reactionSize / 2}\n                style={middleIcon}\n                supportedReactions={supportedReactions}\n                type={reaction.type}\n              />\n            ))}\n          </TouchableOpacity>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: ReactionListPropsWithContext<StreamChatGenerics>,\n  nextProps: ReactionListPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    message: prevMessage,\n    messageContentWidth: prevMessageContentWidth,\n    targetedMessage: prevTargetedMessage,\n  } = prevProps;\n  const {\n    message: nextMessage,\n    messageContentWidth: nextMessageContentWidth,\n    targetedMessage: nextTargetedMessage,\n  } = nextProps;\n\n  const messageContentWidthEqual = prevMessageContentWidth === nextMessageContentWidth;\n  if (!messageContentWidthEqual) return false;\n\n  const messagePinnedEqual = prevMessage.pinned === nextMessage.pinned;\n\n  if (!messagePinnedEqual) return false;\n\n  const targetedMessageEqual = prevTargetedMessage === nextTargetedMessage;\n\n  if (!targetedMessageEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage.latest_reactions) && Array.isArray(nextMessage.latest_reactions)\n      ? prevMessage.latest_reactions.length === nextMessage.latest_reactions.length &&\n        prevMessage.latest_reactions.every(\n          ({ type }, index) => type === nextMessage.latest_reactions?.[index].type,\n        )\n      : prevMessage.latest_reactions === nextMessage.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  return true;\n};\n\nconst MemoizedReactionList = React.memo(\n  ReactionListWithContext,\n  areEqual,\n) as typeof ReactionListWithContext;\n\nexport type ReactionListProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Omit<ReactionListPropsWithContext<StreamChatGenerics>, 'messageContentWidth'>> &\n  Pick<ReactionListPropsWithContext<StreamChatGenerics>, 'messageContentWidth'>;\n\n/**\n * ReactionList - A high level component which implements all the logic required for a message reaction list\n */\nexport const ReactionList = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ReactionListProps<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    message,\n    onLongPress,\n    onPress,\n    onPressIn,\n    preventPress,\n    reactions,\n    showMessageOverlay,\n  } = useMessageContext<StreamChatGenerics>();\n  const { supportedReactions, targetedMessage } = useMessagesContext<StreamChatGenerics>();\n\n  return (\n    <MemoizedReactionList\n      {...{\n        alignment,\n        message,\n        onLongPress,\n        onPress,\n        onPressIn,\n        preventPress,\n        reactions,\n        showMessageOverlay,\n        supportedReactions,\n        targetedMessage,\n      }}\n      {...props}\n    />\n  );\n};\n"],"mappings":"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"}