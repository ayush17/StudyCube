{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_renderText","_MessageContext","_MessagesContext","_ThemeContext","_useTranslatedMessage","_excluded","_this","_jsxFileName","styles","StyleSheet","create","textContainer","maxWidth","paddingHorizontal","MessageTextContainerWithContext","props","theme","useTheme","markdownRules","_props$markdownStyles","markdownStyles","markdownStylesProp","message","messageOverlay","MessageText","messageTextNumberOfLines","onLongPress","onlyEmojis","onPress","preventPress","_props$styles","stylesProp","_theme$theme","colors","_theme$theme$messageS","messageSimple","content","markdown","_theme$theme$messageS2","onlyEmojiMarkdown","_objectWithoutProperties2","translatedMessage","useTranslatedMessage","text","_extends2","createElement","View","style","testID","__self","__source","fileName","lineNumber","columnNumber","renderText","areEqual","prevProps","nextProps","_prevMessage$mentione","_nextMessage$mentione","_nextMessage$mentione2","_prevMessage$mentione2","_nextMessage$mentione3","prevMarkdownStyles","prevMessage","prevMyMessageTheme","myMessageTheme","prevOnlyEmojis","nextMarkdownStyles","nextMessage","nextMyMessageTheme","nextOnlyEmojis","messageTextEqual","onlyEmojisEqual","mentionedUsersEqual","mentioned_users","length","name","markdownStylesEqual","Object","keys","JSON","stringify","messageThemeEqual","MemoizedMessageTextContainer","React","memo","MessageTextContainer","_useMessageContext","useMessageContext","_useMessagesContext","useMessagesContext","exports","displayName"],"sources":["MessageTextContainer.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { renderText, RenderTextParams } from './utils/renderText';\n\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\n\nimport type { MarkdownStyle, Theme } from '../../../contexts/themeContext/utils/theme';\nimport { useTranslatedMessage } from '../../../hooks/useTranslatedMessage';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport type { MessageType } from '../../MessageList/hooks/useMessageList';\n\nconst styles = StyleSheet.create({\n  textContainer: { maxWidth: 250, paddingHorizontal: 16 },\n});\n\nexport type MessageTextProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = MessageTextContainerProps<StreamChatGenerics> & {\n  renderText: (params: RenderTextParams<StreamChatGenerics>) => JSX.Element | null;\n  theme: { theme: Theme };\n};\n\nexport type MessageTextContainerPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageContextValue<StreamChatGenerics>,\n  'message' | 'onLongPress' | 'onlyEmojis' | 'onPress' | 'preventPress'\n> &\n  Pick<\n    MessagesContextValue<StreamChatGenerics>,\n    'markdownRules' | 'MessageText' | 'myMessageTheme'\n  > & {\n    markdownStyles?: MarkdownStyle;\n    messageOverlay?: boolean;\n    messageTextNumberOfLines?: number;\n    styles?: Partial<{\n      textContainer: StyleProp<ViewStyle>;\n    }>;\n  };\n\nconst MessageTextContainerWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageTextContainerPropsWithContext<StreamChatGenerics>,\n) => {\n  const theme = useTheme();\n\n  const {\n    markdownRules,\n    markdownStyles: markdownStylesProp = {},\n    message,\n    messageOverlay,\n    MessageText,\n    messageTextNumberOfLines,\n    onLongPress,\n    onlyEmojis,\n    onPress,\n    preventPress,\n    styles: stylesProp = {},\n  } = props;\n\n  const {\n    theme: {\n      colors,\n      messageSimple: {\n        content: {\n          markdown,\n          textContainer: { onlyEmojiMarkdown, ...textContainer },\n        },\n      },\n    },\n  } = theme;\n\n  const translatedMessage = useTranslatedMessage<StreamChatGenerics>(\n    message,\n  ) as MessageType<StreamChatGenerics>;\n\n  if (!message.text) return null;\n\n  const markdownStyles = { ...markdown, ...markdownStylesProp };\n\n  return (\n    <View\n      style={[styles.textContainer, textContainer, stylesProp.textContainer]}\n      testID='message-text-container'\n    >\n      {MessageText ? (\n        <MessageText {...props} renderText={renderText} theme={theme} />\n      ) : (\n        renderText<StreamChatGenerics>({\n          colors,\n          markdownRules,\n          markdownStyles: {\n            ...markdownStyles,\n            ...(onlyEmojis ? onlyEmojiMarkdown : {}),\n          },\n          message: translatedMessage,\n          messageOverlay,\n          messageTextNumberOfLines,\n          onLongPress,\n          onlyEmojis,\n          onPress,\n          preventPress,\n        })\n      )}\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageTextContainerPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageTextContainerPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    markdownStyles: prevMarkdownStyles,\n    message: prevMessage,\n    myMessageTheme: prevMyMessageTheme,\n    onlyEmojis: prevOnlyEmojis,\n  } = prevProps;\n  const {\n    markdownStyles: nextMarkdownStyles,\n    message: nextMessage,\n    myMessageTheme: nextMyMessageTheme,\n    onlyEmojis: nextOnlyEmojis,\n  } = nextProps;\n\n  const messageTextEqual = prevMessage.text === nextMessage.text;\n  if (!messageTextEqual) return false;\n\n  const onlyEmojisEqual = prevOnlyEmojis === nextOnlyEmojis;\n  if (!onlyEmojisEqual) return false;\n\n  const mentionedUsersEqual =\n    prevMessage.mentioned_users?.length === nextMessage.mentioned_users?.length &&\n    (nextMessage.mentioned_users?.length === 0 ||\n      (prevMessage.mentioned_users?.length &&\n        nextMessage.mentioned_users?.length &&\n        prevMessage.mentioned_users[0].name === nextMessage.mentioned_users[0].name));\n  if (!mentionedUsersEqual) return false;\n\n  // stringify could be an expensive operation, so lets rule out the obvious\n  // possibilities first such as different object reference or empty objects etc.\n  // Also keeping markdown equality check at the last to make sure other less\n  // expensive equality checks get executed first and markdown check will be skipped if returned\n  // false from previous checks.\n  const markdownStylesEqual =\n    prevMarkdownStyles === nextMarkdownStyles ||\n    (Object.keys(prevMarkdownStyles || {}).length === 0 &&\n      Object.keys(nextMarkdownStyles || {}).length === 0) ||\n    JSON.stringify(prevMarkdownStyles) === JSON.stringify(nextMarkdownStyles);\n  if (!markdownStylesEqual) return false;\n\n  const messageThemeEqual =\n    JSON.stringify(prevMyMessageTheme) === JSON.stringify(nextMyMessageTheme);\n  if (!messageThemeEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageTextContainer = React.memo(\n  MessageTextContainerWithContext,\n  areEqual,\n) as typeof MessageTextContainerWithContext;\n\nexport type MessageTextContainerProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageTextContainerPropsWithContext<StreamChatGenerics>>;\n\nexport const MessageTextContainer = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageTextContainerProps<StreamChatGenerics>,\n) => {\n  const { message, onLongPress, onlyEmojis, onPress, preventPress } =\n    useMessageContext<StreamChatGenerics>();\n  const { markdownRules, MessageText, myMessageTheme } = useMessagesContext<StreamChatGenerics>();\n  const { messageTextNumberOfLines } = props;\n\n  return (\n    <MemoizedMessageTextContainer\n      {...{\n        markdownRules,\n        message,\n        MessageText,\n        messageTextNumberOfLines,\n        myMessageTheme,\n        onLongPress,\n        onlyEmojis,\n        onPress,\n        preventPress,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageTextContainer.displayName = 'MessageTextContainer{messageSimple{content}}';\n"],"mappings":"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"}