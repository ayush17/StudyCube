{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_bottomSheet","_VideoThumbnail","_ThemeContext","_useViewport2","_excluded","_this","_jsxFileName","styles","StyleSheet","create","avatarImage","borderRadius","height","width","avatarImageWrapper","borderWidth","margin","contentContainer","flexGrow","image","GridImage","_ref","item","_useTheme","useTheme","gridImage","theme","imageGallery","grid","_useViewport","useViewport","vw","imageComponent","restItem","_objectWithoutProperties2","numberOfImageGalleryGridColumns","selectAndClose","thumb_url","type","uri","size","createElement","TouchableOpacity","accessibilityLabel","onPress","__self","__source","fileName","lineNumber","columnNumber","View","style","VideoThumbnail","Image","source","renderItem","_ref2","ImageGrid","props","avatarComponent","closeGridView","photos","setSelectedMessage","_useTheme2","_useTheme2$theme","white","colors","_useTheme2$theme$imag","container","imageGridItems","map","photo","_extends2","messageId","url","BottomSheetFlatList","contentContainerStyle","backgroundColor","data","keyExtractor","index","numColumns","exports","displayName"],"sources":["ImageGrid.tsx"],"sourcesContent":["import React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport { BottomSheetFlatList, TouchableOpacity } from '@gorhom/bottom-sheet';\n\nimport { VideoThumbnail } from '../../../components/Attachment/VideoThumbnail';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport { useViewport } from '../../../hooks/useViewport';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nimport type { Photo } from '../ImageGallery';\n\nconst styles = StyleSheet.create({\n  avatarImage: {\n    borderRadius: 22,\n    height: 22,\n    width: 22,\n  },\n  avatarImageWrapper: {\n    borderRadius: 24,\n    borderWidth: 1,\n    height: 24,\n    margin: 8,\n    width: 24,\n  },\n  contentContainer: {\n    flexGrow: 1,\n  },\n  image: {\n    margin: 1,\n  },\n});\n\nexport type ImageGalleryGridImageComponent<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = ({\n  item,\n}: {\n  item: Photo<StreamChatGenerics> & {\n    selectAndClose: () => void;\n    numberOfImageGalleryGridColumns?: number;\n  };\n}) => React.ReactElement | null;\n\nexport type ImageGalleryGridImageComponents<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  avatarComponent?: ImageGalleryGridImageComponent<StreamChatGenerics>;\n  imageComponent?: ImageGalleryGridImageComponent<StreamChatGenerics>;\n};\n\nexport type GridImageItem<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Photo<StreamChatGenerics> &\n  ImageGalleryGridImageComponents<StreamChatGenerics> & {\n    selectAndClose: () => void;\n    numberOfImageGalleryGridColumns?: number;\n  };\n\nconst GridImage = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  item,\n}: {\n  item: GridImageItem<StreamChatGenerics>;\n}) => {\n  const {\n    theme: {\n      imageGallery: {\n        grid: { gridImage },\n      },\n    },\n  } = useTheme();\n  const { vw } = useViewport();\n  const { imageComponent, ...restItem } = item;\n\n  const { numberOfImageGalleryGridColumns, selectAndClose, thumb_url, type, uri } = restItem;\n\n  const size = vw(100) / (numberOfImageGalleryGridColumns || 3) - 2;\n\n  if (imageComponent) {\n    return imageComponent({ item: restItem });\n  }\n\n  return (\n    <TouchableOpacity accessibilityLabel='Grid Image' onPress={selectAndClose}>\n      {type === 'video' ? (\n        <View style={[styles.image, { height: size, width: size }, gridImage]}>\n          <VideoThumbnail thumb_url={thumb_url} />\n        </View>\n      ) : (\n        <Image source={{ uri }} style={[styles.image, { height: size, width: size }]} />\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst renderItem = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  item,\n}: {\n  item: GridImageItem<StreamChatGenerics>;\n}) => <GridImage item={item} />;\n\nexport type ImageGridType<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = ImageGalleryGridImageComponents<StreamChatGenerics> & {\n  closeGridView: () => void;\n  photos: Photo<StreamChatGenerics>[];\n  setSelectedMessage: React.Dispatch<\n    React.SetStateAction<\n      | {\n          messageId?: string | undefined;\n          url?: string | undefined;\n        }\n      | undefined\n    >\n  >;\n  numberOfImageGalleryGridColumns?: number;\n};\n\nexport const ImageGrid = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ImageGridType<StreamChatGenerics>,\n) => {\n  const {\n    avatarComponent,\n    closeGridView,\n    imageComponent,\n    numberOfImageGalleryGridColumns,\n    photos,\n    setSelectedMessage,\n  } = props;\n\n  const {\n    theme: {\n      colors: { white },\n      imageGallery: {\n        grid: { container, contentContainer },\n      },\n    },\n  } = useTheme();\n\n  const imageGridItems = photos.map((photo) => ({\n    ...photo,\n    avatarComponent,\n    imageComponent,\n    numberOfImageGalleryGridColumns,\n    selectAndClose: () => {\n      setSelectedMessage({ messageId: photo.messageId, url: photo.uri });\n      closeGridView();\n    },\n  }));\n\n  return (\n    <BottomSheetFlatList<GridImageItem<StreamChatGenerics>>\n      accessibilityLabel='Image Grid'\n      contentContainerStyle={[\n        styles.contentContainer,\n        { backgroundColor: white },\n        contentContainer,\n      ]}\n      data={imageGridItems as GridImageItem<StreamChatGenerics>[]}\n      keyExtractor={(item, index) => `${item.uri}-${index}`}\n      numColumns={numberOfImageGalleryGridColumns || 3}\n      renderItem={renderItem}\n      style={container}\n    />\n  );\n};\n\nImageGrid.displayName = 'ImageGrid{imageGallery{grid}}';\n"],"mappings":"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"}