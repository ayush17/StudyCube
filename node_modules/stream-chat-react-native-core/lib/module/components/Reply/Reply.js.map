{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_merge","_interopRequireDefault","_MessageContext","_MessageInputContext","_MessagesContext","_ThemeContext","_TranslationContext","_getResizedImageUrl","_utils","_FileIcon","_VideoThumbnail","_MessageAvatar","_MessageTextContainer","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","styles","StyleSheet","create","container","alignItems","flexDirection","fileAttachmentContainer","paddingLeft","paddingVertical","imageAttachment","borderRadius","height","marginLeft","marginVertical","width","messageContainer","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","flexGrow","flexShrink","text","fontSize","textContainer","maxWidth","undefined","paddingHorizontal","videoThumbnailContainerStyle","videoThumbnailImageStyle","getMessageType","lastAttachment","messageType","isLastAttachmentFile","type","isLastAttachmentVideo","isLastAttachmentGiphy","isLastAttachmentImageOrGiphy","title_link","og_scrape_url","isLastAttachmentImage","image_url","thumb_url","ReplyWithContext","props","_quotedMessage$attach","_stylesProp$imageAtta","_stylesProp$imageAtta2","_stylesProp$imageAtta3","_stylesProp$imageAtta4","_stylesProp$fileAttac","FileAttachmentIcon","_props$attachmentSize","attachmentSize","MessageAvatar","quotedMessage","_props$styles","stylesProp","t","_useState","useState","_useState2","_slicedToArray2","error","setError","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","blue_alice","border","grey","transparent","white","deletedText","messageSimple","content","_useTheme$theme$reply","reply","markdownStyles","_useTheme$theme$reply2","videoThumbnail","image","messageText","emojiOnlyText","useMemo","hasOnlyEmojis","attachments","slice","hasImage","onlyEmojis","createElement","View","style","__self","__source","fileName","lineNumber","columnNumber","alignment","lastGroupMessage","message","size","backgroundColor","borderColor","borderWidth","mimeType","mime_type","Image","onError","source","uri","getResizedImageUrl","url","VideoThumbnail","imageStyle","MessageTextContainer","merge","em","color","_extends2","length","title","marginRight","Number","useMessageInputContextIfAvailable","contextValue","useContext","MessageInputContext","areEqual","prevProps","nextProps","prevQuotedMessage","nextQuotedMessage","quotedMessageEqual","id","deleted_at","MemoizedReply","React","memo","Reply","_useMessageContext","useMessageContext","_useMessagesContext","useMessagesContext","_useMessagesContext$F","FileIconDefault","_useMessagesContext$M","MessageAvatarDefault","_useMessageInputConte","editing","quotedEditingMessage","quoted_message","_useTranslationContex","useTranslationContext","exports","displayName"],"sources":["Reply.tsx"],"sourcesContent":["import React, { useContext, useMemo, useState } from 'react';\nimport { Image, ImageStyle, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport merge from 'lodash/merge';\n\nimport type { Attachment } from 'stream-chat';\n\nimport { useMessageContext } from '../../contexts/messageContext/MessageContext';\nimport {\n  MessageInputContext,\n  MessageInputContextValue,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { getResizedImageUrl } from '../../utils/getResizedImageUrl';\nimport { hasOnlyEmojis } from '../../utils/utils';\n\nimport { FileIcon as FileIconDefault } from '../Attachment/FileIcon';\nimport { VideoThumbnail } from '../Attachment/VideoThumbnail';\nimport { MessageAvatar as MessageAvatarDefault } from '../Message/MessageSimple/MessageAvatar';\nimport { MessageTextContainer } from '../Message/MessageSimple/MessageTextContainer';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  fileAttachmentContainer: { paddingLeft: 8, paddingVertical: 8 },\n  imageAttachment: {\n    borderRadius: 8,\n    height: 32,\n    marginLeft: 8,\n    marginVertical: 8,\n    width: 32,\n  },\n  messageContainer: {\n    alignItems: 'flex-start',\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 12,\n    borderTopLeftRadius: 12,\n    borderTopRightRadius: 12,\n    flexDirection: 'row',\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  text: { fontSize: 12 },\n  textContainer: { maxWidth: undefined, paddingHorizontal: 8 },\n  videoThumbnailContainerStyle: {\n    borderRadius: 8,\n    height: 50,\n    marginLeft: 8,\n    marginVertical: 8,\n    width: 50,\n  },\n  videoThumbnailImageStyle: {\n    borderRadius: 10,\n  },\n});\n\ntype ReplyPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<MessageInputContextValue<StreamChatGenerics>, 'quotedMessage'> &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'FileAttachmentIcon' | 'MessageAvatar'> &\n  Pick<TranslationContextValue, 't'> & {\n    attachmentSize?: number;\n    styles?: Partial<{\n      container: ViewStyle;\n      fileAttachmentContainer: ViewStyle;\n      imageAttachment: ImageStyle;\n      messageContainer: ViewStyle;\n      textContainer: ViewStyle;\n    }>;\n  };\n\nconst getMessageType = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  lastAttachment: Attachment<StreamChatGenerics>,\n) => {\n  let messageType;\n\n  const isLastAttachmentFile = lastAttachment.type === 'file' || lastAttachment.type === 'audio';\n\n  const isLastAttachmentVideo = lastAttachment.type === 'video';\n\n  const isLastAttachmentGiphy =\n    lastAttachment?.type === 'giphy' || lastAttachment?.type === 'imgur';\n\n  const isLastAttachmentImageOrGiphy =\n    lastAttachment?.type === 'image' &&\n    !lastAttachment?.title_link &&\n    !lastAttachment?.og_scrape_url;\n\n  const isLastAttachmentImage = lastAttachment?.image_url || lastAttachment?.thumb_url;\n\n  if (isLastAttachmentFile) {\n    messageType = 'file';\n  } else if (isLastAttachmentVideo) {\n    messageType = 'video';\n  } else if (isLastAttachmentImageOrGiphy) {\n    if (isLastAttachmentImage) messageType = 'image';\n    else messageType = undefined;\n  } else if (isLastAttachmentGiphy) messageType = 'giphy';\n  else messageType = 'other';\n\n  return messageType;\n};\n\nconst ReplyWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ReplyPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    FileAttachmentIcon,\n    attachmentSize = 40,\n    MessageAvatar,\n    quotedMessage,\n    styles: stylesProp = {},\n    t,\n  } = props;\n\n  const [error, setError] = useState(false);\n\n  const {\n    theme: {\n      colors: { blue_alice, border, grey, transparent, white },\n      messageSimple: {\n        content: { deletedText },\n      },\n      reply: {\n        container,\n        fileAttachmentContainer,\n        imageAttachment,\n        markdownStyles,\n        messageContainer,\n        textContainer,\n        videoThumbnail: {\n          container: videoThumbnailContainerStyle,\n          image: videoThumbnailImageStyle,\n        },\n      },\n    },\n  } = useTheme();\n\n  const messageText = typeof quotedMessage === 'boolean' ? '' : quotedMessage.text || '';\n\n  const emojiOnlyText = useMemo(() => {\n    if (!messageText) return false;\n    return hasOnlyEmojis(messageText);\n  }, [messageText]);\n\n  if (typeof quotedMessage === 'boolean') return null;\n\n  const lastAttachment = quotedMessage.attachments?.slice(-1)[0] as Attachment<StreamChatGenerics>;\n  const messageType = lastAttachment && getMessageType(lastAttachment);\n\n  const hasImage =\n    !error &&\n    lastAttachment &&\n    messageType !== 'file' &&\n    messageType !== 'video' &&\n    (lastAttachment.image_url || lastAttachment.thumb_url || lastAttachment.og_scrape_url);\n\n  const onlyEmojis = !lastAttachment && emojiOnlyText;\n\n  return (\n    <View style={[styles.container, container, stylesProp.container]}>\n      <MessageAvatar alignment={'left'} lastGroupMessage message={quotedMessage} size={24} />\n      <View\n        style={[\n          styles.messageContainer,\n          {\n            backgroundColor:\n              messageType === 'other' ? blue_alice : messageType === 'giphy' ? transparent : white,\n            borderColor: border,\n            borderWidth: messageType === 'other' ? 0 : 1,\n          },\n          messageContainer,\n          stylesProp.messageContainer,\n        ]}\n      >\n        {!error && lastAttachment ? (\n          messageType === 'file' ? (\n            <View\n              style={[\n                styles.fileAttachmentContainer,\n                fileAttachmentContainer,\n                stylesProp.fileAttachmentContainer,\n              ]}\n            >\n              <FileAttachmentIcon mimeType={lastAttachment.mime_type} size={attachmentSize} />\n            </View>\n          ) : hasImage ? (\n            <Image\n              onError={() => setError(true)}\n              source={{\n                uri: getResizedImageUrl({\n                  height:\n                    stylesProp.imageAttachment?.height ||\n                    imageAttachment?.height ||\n                    styles.imageAttachment.height,\n                  url: (lastAttachment.image_url ||\n                    lastAttachment.thumb_url ||\n                    lastAttachment.og_scrape_url) as string,\n                  width:\n                    stylesProp.imageAttachment?.width ||\n                    imageAttachment?.width ||\n                    styles.imageAttachment.width,\n                }),\n              }}\n              style={[styles.imageAttachment, imageAttachment, stylesProp.imageAttachment]}\n            />\n          ) : null\n        ) : null}\n        {messageType === 'video' && !lastAttachment.og_scrape_url ? (\n          <VideoThumbnail\n            imageStyle={[styles.videoThumbnailImageStyle, videoThumbnailImageStyle]}\n            style={[styles.videoThumbnailContainerStyle, videoThumbnailContainerStyle]}\n            thumb_url={lastAttachment.thumb_url}\n          />\n        ) : null}\n        <MessageTextContainer<StreamChatGenerics>\n          markdownStyles={\n            quotedMessage.type === 'deleted'\n              ? merge({ em: { color: grey } }, deletedText)\n              : { text: styles.text, ...markdownStyles }\n          }\n          message={{\n            ...quotedMessage,\n            text:\n              quotedMessage.type === 'deleted'\n                ? `_${t('Message deleted')}_`\n                : quotedMessage.text\n                ? quotedMessage.text.length > 170\n                  ? `${quotedMessage.text.slice(0, 170)}...`\n                  : quotedMessage.text\n                : messageType === 'image'\n                ? t('Photo')\n                : messageType === 'video'\n                ? t('Video')\n                : messageType === 'file'\n                ? lastAttachment?.title || ''\n                : '',\n          }}\n          onlyEmojis={onlyEmojis}\n          styles={{\n            textContainer: [\n              {\n                marginRight:\n                  hasImage || messageType === 'video'\n                    ? Number(\n                        stylesProp.imageAttachment?.height ||\n                          imageAttachment.height ||\n                          styles.imageAttachment.height,\n                      ) +\n                      Number(\n                        stylesProp.imageAttachment?.marginLeft ||\n                          imageAttachment.marginLeft ||\n                          styles.imageAttachment.marginLeft,\n                      )\n                    : messageType === 'file'\n                    ? attachmentSize +\n                      Number(\n                        stylesProp.fileAttachmentContainer?.paddingLeft ||\n                          fileAttachmentContainer.paddingLeft ||\n                          styles.fileAttachmentContainer.paddingLeft,\n                      )\n                    : undefined,\n              },\n              styles.textContainer,\n              textContainer,\n              stylesProp.textContainer,\n            ],\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\n/**\n * When a reply is rendered in a MessageSimple, it does\n * not have a MessageInputContext. As this is deliberate,\n * this function exists to avoid the error thrown when\n * using a context outside of its provider.\n * */\nconst useMessageInputContextIfAvailable = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const contextValue = useContext(\n    MessageInputContext,\n  ) as unknown as MessageInputContextValue<StreamChatGenerics>;\n\n  return contextValue;\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: ReplyPropsWithContext<StreamChatGenerics>,\n  nextProps: ReplyPropsWithContext<StreamChatGenerics>,\n) => {\n  const { quotedMessage: prevQuotedMessage } = prevProps;\n  const { quotedMessage: nextQuotedMessage } = nextProps;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id &&\n        prevQuotedMessage.deleted_at === nextQuotedMessage.deleted_at &&\n        prevQuotedMessage.type === nextQuotedMessage.type\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n\n  if (!quotedMessageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedReply = React.memo(ReplyWithContext, areEqual) as typeof ReplyWithContext;\n\nexport type ReplyProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<ReplyPropsWithContext<StreamChatGenerics>>;\n\n/**\n * UI Component for reply\n */\nexport const Reply = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ReplyProps<StreamChatGenerics>,\n) => {\n  const { message } = useMessageContext<StreamChatGenerics>();\n\n  const { FileAttachmentIcon = FileIconDefault, MessageAvatar = MessageAvatarDefault } =\n    useMessagesContext<StreamChatGenerics>();\n\n  const { editing, quotedMessage } = useMessageInputContextIfAvailable<StreamChatGenerics>();\n\n  const quotedEditingMessage = (\n    typeof editing !== 'boolean' ? editing?.quoted_message || false : false\n  ) as MessageInputContextValue<StreamChatGenerics>['quotedMessage'];\n\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedReply\n      {...{\n        FileAttachmentIcon,\n        MessageAvatar,\n        quotedMessage: message\n          ? (message.quoted_message as MessageInputContextValue<StreamChatGenerics>['quotedMessage'])\n          : quotedMessage || quotedEditingMessage,\n        t,\n      }}\n      {...props}\n    />\n  );\n};\n\nReply.displayName = 'Reply{reply}';\n"],"mappings":"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"}