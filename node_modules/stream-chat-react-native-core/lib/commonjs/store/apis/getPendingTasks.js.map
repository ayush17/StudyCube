{"version":3,"names":["_mapStorableToTask","require","_QuickSqliteClient","_createSelectQuery","getPendingTasks","conditions","arguments","length","undefined","query","createSelectQuery","createdAt","QuickSqliteClient","logger","result","executeSql","apply","map","r","mapStorableToTask","exports"],"sources":["getPendingTasks.ts"],"sourcesContent":["import { mapStorableToTask } from '../mappers/mapStorableToTask';\nimport { QuickSqliteClient } from '../QuickSqliteClient';\nimport { createSelectQuery } from '../sqlite-utils/createSelectQuery';\nimport type { TableRowJoinedUser } from '../types';\n\nexport const getPendingTasks = (conditions: { messageId?: string } = {}) => {\n  const query = createSelectQuery('pendingTasks', ['*'], conditions, {\n    createdAt: 1,\n  });\n\n  QuickSqliteClient.logger?.('info', 'getPendingTasks', { conditions });\n  const result = QuickSqliteClient.executeSql.apply(null, query);\n\n  return result.map((r: TableRowJoinedUser<'pendingTasks'>) => mapStorableToTask(r));\n};\n"],"mappings":";;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAF,OAAA;AAGO,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAgD;EAAA,IAA5CC,UAAkC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACrE,IAAMG,KAAK,GAAG,IAAAC,oCAAiB,EAAC,cAAc,EAAE,CAAC,GAAG,CAAC,EAAEL,UAAU,EAAE;IACjEM,SAAS,EAAE;EACb,CAAC,CAAC;EAEFC,oCAAiB,CAACC,MAAM,oBAAxBD,oCAAiB,CAACC,MAAM,CAAG,MAAM,EAAE,iBAAiB,EAAE;IAAER,UAAU,EAAVA;EAAW,CAAC,CAAC;EACrE,IAAMS,MAAM,GAAGF,oCAAiB,CAACG,UAAU,CAACC,KAAK,CAAC,IAAI,EAAEP,KAAK,CAAC;EAE9D,OAAOK,MAAM,CAACG,GAAG,CAAC,UAACC,CAAqC;IAAA,OAAK,IAAAC,oCAAiB,EAACD,CAAC,CAAC;EAAA,EAAC;AACpF,CAAC;AAACE,OAAA,CAAAhB,eAAA,GAAAA,eAAA"}