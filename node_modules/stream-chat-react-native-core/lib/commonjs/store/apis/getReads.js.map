{"version":3,"names":["_selectReadsForChannels","require","_mapStorableToRead","_QuickSqliteClient","getReads","_ref","channelIds","QuickSqliteClient","logger","reads","selectReadsForChannels","cidVsReads","forEach","read","cid","push","mapStorableToRead","exports"],"sources":["getReads.ts"],"sourcesContent":["import type { ReadResponse } from 'stream-chat';\n\nimport { selectReadsForChannels } from './queries/selectReadsForChannels';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { mapStorableToRead } from '../mappers/mapStorableToRead';\nimport { QuickSqliteClient } from '../QuickSqliteClient';\n\nexport const getReads = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  channelIds,\n}: {\n  channelIds: string[];\n}) => {\n  QuickSqliteClient.logger?.('info', 'getReads', { channelIds });\n  const reads = selectReadsForChannels(channelIds);\n  const cidVsReads: Record<string, ReadResponse<StreamChatGenerics>[]> = {};\n\n  reads.forEach((read) => {\n    if (!cidVsReads[read.cid]) {\n      cidVsReads[read.cid] = [];\n    }\n    cidVsReads[read.cid].push(mapStorableToRead<StreamChatGenerics>(read));\n  });\n\n  return cidVsReads;\n};\n"],"mappings":";;;;AAEA,IAAAA,uBAAA,GAAAC,OAAA;AAGA,IAAAC,kBAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAF,OAAA;AAEO,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAMf;EAAA,IAHJC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAIVC,oCAAiB,CAACC,MAAM,oBAAxBD,oCAAiB,CAACC,MAAM,CAAG,MAAM,EAAE,UAAU,EAAE;IAAEF,UAAU,EAAVA;EAAW,CAAC,CAAC;EAC9D,IAAMG,KAAK,GAAG,IAAAC,8CAAsB,EAACJ,UAAU,CAAC;EAChD,IAAMK,UAA8D,GAAG,CAAC,CAAC;EAEzEF,KAAK,CAACG,OAAO,CAAC,UAACC,IAAI,EAAK;IACtB,IAAI,CAACF,UAAU,CAACE,IAAI,CAACC,GAAG,CAAC,EAAE;MACzBH,UAAU,CAACE,IAAI,CAACC,GAAG,CAAC,GAAG,EAAE;IAC3B;IACAH,UAAU,CAACE,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAAC,oCAAiB,EAAqBH,IAAI,CAAC,CAAC;EACxE,CAAC,CAAC;EAEF,OAAOF,UAAU;AACnB,CAAC;AAACM,OAAA,CAAAb,QAAA,GAAAA,QAAA"}