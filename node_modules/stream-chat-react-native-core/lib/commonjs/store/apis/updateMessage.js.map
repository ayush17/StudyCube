{"version":3,"names":["_mapMessageToStorable","require","_mapReactionToStorable","_mapUserToStorable","_QuickSqliteClient","_createDeleteQuery","_createSelectQuery","_createUpdateQuery","_createUpsertQuery","updateMessage","_ref","_ref$flush","flush","message","queries","messages","QuickSqliteClient","executeSql","apply","createSelectQuery","id","length","storableMessage","mapMessageToStorable","push","createUpdateQuery","storableUsers","user","storableUser","mapUserToStorable","createUpsertQuery","createDeleteQuery","messageId","latestReactions","latest_reactions","ownReactions","own_reactions","storableReactions","concat","_toConsumableArray2","forEach","r","storableReaction","mapReactionToStorable","logger","reactions","users","executeSqlBatch","exports"],"sources":["updateMessage.ts"],"sourcesContent":["import type { FormatMessageResponse, MessageResponse } from 'stream-chat';\n\nimport { mapMessageToStorable } from '../mappers/mapMessageToStorable';\nimport { mapReactionToStorable } from '../mappers/mapReactionToStorable';\nimport { mapUserToStorable } from '../mappers/mapUserToStorable';\nimport { QuickSqliteClient } from '../QuickSqliteClient';\nimport { createDeleteQuery } from '../sqlite-utils/createDeleteQuery';\nimport { createSelectQuery } from '../sqlite-utils/createSelectQuery';\nimport { createUpdateQuery } from '../sqlite-utils/createUpdateQuery';\nimport { createUpsertQuery } from '../sqlite-utils/createUpsertQuery';\nimport type { PreparedQueries } from '../types';\n\nexport const updateMessage = ({\n  flush = true,\n  message,\n}: {\n  message: MessageResponse | FormatMessageResponse;\n  flush?: boolean;\n}) => {\n  const queries: PreparedQueries[] = [];\n\n  const messages = QuickSqliteClient.executeSql.apply(\n    null,\n    createSelectQuery('messages', ['*'], {\n      id: message.id,\n    }),\n  );\n\n  if (messages.length === 0) {\n    return queries;\n  }\n\n  const storableMessage = mapMessageToStorable(message);\n\n  queries.push(\n    createUpdateQuery('messages', storableMessage, {\n      id: message.id,\n    }),\n  );\n\n  const storableUsers: Array<ReturnType<typeof mapUserToStorable>> = [];\n\n  if (message.user) {\n    const storableUser = mapUserToStorable(message.user);\n    storableUsers.push(storableUser);\n    queries.push(createUpsertQuery('users', storableUser));\n  }\n\n  queries.push(\n    createDeleteQuery('reactions', {\n      messageId: message.id,\n    }),\n  );\n\n  const latestReactions = message.latest_reactions || [];\n  const ownReactions = message.own_reactions || [];\n\n  const storableReactions: Array<ReturnType<typeof mapReactionToStorable>> = [];\n\n  [...latestReactions, ...ownReactions].forEach((r) => {\n    if (r.user) {\n      const storableUser = mapUserToStorable(r.user);\n      storableUsers.push(storableUser);\n      queries.push(createUpsertQuery('users', storableUser));\n    }\n\n    const storableReaction = mapReactionToStorable(r);\n    storableReactions.push(storableReaction);\n    queries.push(createUpsertQuery('reactions', storableReaction));\n  });\n\n  QuickSqliteClient.logger?.('info', 'updateMessage', {\n    message: storableMessage,\n    reactions: storableReactions,\n    users: storableUsers,\n  });\n\n  if (flush) {\n    QuickSqliteClient.executeSqlBatch(queries);\n  }\n\n  return queries;\n};\n"],"mappings":"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"}