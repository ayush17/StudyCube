{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_MessageContext","_MessagesContext","_TranslationContext","_this","_jsxFileName","MessageBounceWithContext","props","_useTranslationContex","useTranslationContext","t","message","removeMessage","retrySendMessage","setEditingState","setIsBounceDialogOpen","handleEditMessage","handleResend","handleRemoveMessage","createElement","Fragment","Alert","alert","onPress","text","cancelable","exports","areEqual","prevProps","nextProps","prevMessage","nextMessage","messageEqual","cid","type","MemoizedMessageBounce","React","memo","MessageBounce","_useMessageContext","useMessageContext","_useMessagesContext","useMessagesContext","_extends2","__self","__source","fileName","lineNumber","columnNumber"],"sources":["MessageBounce.tsx"],"sourcesContent":["import React from 'react';\nimport { Alert } from 'react-native';\n\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nexport type MessageBouncePropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessagesContextValue<StreamChatGenerics>,\n  'setEditingState' | 'removeMessage' | 'retrySendMessage'\n> &\n  Pick<MessageContextValue<StreamChatGenerics>, 'message'> & {\n    setIsBounceDialogOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  };\n\nexport const MessageBounceWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageBouncePropsWithContext<StreamChatGenerics>,\n) => {\n  const { t } = useTranslationContext();\n  const { message, removeMessage, retrySendMessage, setEditingState, setIsBounceDialogOpen } =\n    props;\n\n  const handleEditMessage = () => {\n    setEditingState(message);\n    if (setIsBounceDialogOpen) {\n      setIsBounceDialogOpen(false);\n    }\n  };\n\n  const handleResend = () => {\n    retrySendMessage(message);\n    if (setIsBounceDialogOpen) {\n      setIsBounceDialogOpen(false);\n    }\n  };\n\n  const handleRemoveMessage = () => {\n    removeMessage(message);\n    if (setIsBounceDialogOpen) {\n      setIsBounceDialogOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {Alert.alert(\n        t('Are you sure?'),\n        t(\n          'Consider how your comment might make others feel and be sure to follow our Community Guidelines',\n        ),\n        [\n          { onPress: handleResend, text: t('Send Anyway') },\n          { onPress: handleEditMessage, text: t('Edit Message') },\n          { onPress: handleRemoveMessage, text: t('Delete Message') },\n        ],\n        { cancelable: true },\n      )}\n    </>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageBouncePropsWithContext<StreamChatGenerics>,\n  nextProps: MessageBouncePropsWithContext<StreamChatGenerics>,\n) => {\n  const { message: prevMessage } = prevProps;\n  const { message: nextMessage } = nextProps;\n  const messageEqual =\n    prevMessage.cid === nextMessage.cid &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text;\n  if (!messageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageBounce = React.memo(\n  MessageBounceWithContext,\n  areEqual,\n) as typeof MessageBounceWithContext;\n\nexport type MessageBounceProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageBouncePropsWithContext<StreamChatGenerics>> & {\n  setIsBounceDialogOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const MessageBounce = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageBounceProps<StreamChatGenerics>,\n) => {\n  const { message } = useMessageContext<StreamChatGenerics>();\n  const { removeMessage, retrySendMessage, setEditingState } =\n    useMessagesContext<StreamChatGenerics>();\n  return (\n    <MemoizedMessageBounce<StreamChatGenerics>\n      {...{\n        message,\n        removeMessage,\n        retrySendMessage,\n        setEditingState,\n      }}\n      {...props}\n    />\n  );\n};\n"],"mappings":"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"}