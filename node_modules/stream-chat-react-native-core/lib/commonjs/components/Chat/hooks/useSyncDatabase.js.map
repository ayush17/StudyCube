{"version":3,"names":["_react","require","_handleEventToSyncDB","useSyncDatabase","_ref","client","enableOfflineSupport","initialisedDatabase","useEffect","listener","on","handleEventToSyncDB","_listener","unsubscribe","exports"],"sources":["useSyncDatabase.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nimport type { StreamChat } from 'stream-chat';\n\nimport { handleEventToSyncDB } from './handleEventToSyncDB';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\ntype Params<StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics> = {\n  client: StreamChat<StreamChatGenerics>;\n  enableOfflineSupport: boolean;\n  initialisedDatabase: boolean;\n};\nexport const useSyncDatabase = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  client,\n  enableOfflineSupport,\n  initialisedDatabase,\n}: Params<StreamChatGenerics>) => {\n  useEffect(() => {\n    let listener: ReturnType<StreamChat['on']> | undefined;\n\n    if (enableOfflineSupport && initialisedDatabase) {\n      listener = client?.on(handleEventToSyncDB);\n    }\n\n    return () => {\n      listener?.unsubscribe();\n    };\n  }, [client, initialisedDatabase]);\n};\n"],"mappings":";;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAIA,IAAAC,oBAAA,GAAAD,OAAA;AASO,IAAME,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAMM;EAAA,IAHhCC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,oBAAoB,GAAAF,IAAA,CAApBE,oBAAoB;IACpBC,mBAAmB,GAAAH,IAAA,CAAnBG,mBAAmB;EAEnB,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAIC,QAAkD;IAEtD,IAAIH,oBAAoB,IAAIC,mBAAmB,EAAE;MAC/CE,QAAQ,GAAGJ,MAAM,oBAANA,MAAM,CAAEK,EAAE,CAACC,wCAAmB,CAAC;IAC5C;IAEA,OAAO,YAAM;MAAA,IAAAC,SAAA;MACX,CAAAA,SAAA,GAAAH,QAAQ,qBAARG,SAAA,CAAUC,WAAW,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACR,MAAM,EAAEE,mBAAmB,CAAC,CAAC;AACnC,CAAC;AAACO,OAAA,CAAAX,eAAA,GAAAA,eAAA"}